{"version":3,"sources":["context/alert/alertContext.js","components/Alert.js","components/Navbar.js","pages/About.js","context/firebase/firebaseContext.js","components/Form.js","components/Notes.js","components/Loader.js","pages/Home.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/firebase/firebaseReducer.js","context/firebase/FirebaseState.js","App.js","reportWebVitals.js","index.js"],"names":["AlertContext","createContext","Alert","useContext","alert","hide","CSSTransition","in","visible","timeout","enter","exit","classNames","mountOnEnter","unmountOnExit","className","type","text","onClick","Navbar","exact","to","About","FirebaseContext","Form","useState","value","setValue","firebase","onSubmit","event","preventDefault","trim","addNote","then","show","catch","placeholder","onChange","e","target","Notes","notes","onRemove","TransitionGroup","component","map","note","title","date","id","Loader","role","Home","loading","fetchNotes","removeNote","useEffect","SHOW_ALERT","HIDE_ALERT","SHOW_LOADER","ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","handlers","state","payload","alertReducer","action","DEFAULT","AlertState","children","useReducer","dispath","Provider","filter","firebaseReducer","url","process","FirebaseState","showLoader","a","axios","get","res","Object","keys","data","key","Date","toJSON","post","name","Error","message","delete","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.691120c1.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AlertContext = createContext()","import React, {useContext} from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\nimport {CSSTransition} from 'react-transition-group'\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={alert.visible}\r\n            timeout={{\r\n                enter: 500,\r\n                exit: 350\r\n            }}\r\n            classNames={'alert'}\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <div className={`alert alert-${alert.type || 'warning'}  alert-dismissible`}>\r\n                <strong>Внимание!</strong>\r\n                &nbsp;{alert.text}\r\n                <button onClick={hide} type=\"button\" className=\"btn-close\" aria-label=\"Close\">\r\n                    {/* <span aria-hidden=\"true\">&times;</span> */}\r\n                </button>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport const Navbar = () => (\r\n    <nav className=\"navbar navbar-dark navbar-expand-lg main-nav\">\r\n        <div className=\"navbar-brand nav\">\r\n            Note App\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <NavLink exact className=\"nav-link\" aria-current=\"page\" to=\"/\">Заметки</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/about\">Информация</NavLink>\r\n            </li>\r\n      </ul>\r\n    </nav>\r\n)","import React from 'react'\r\n\r\nexport const About = () => (\r\n    <div className=\"\">\r\n        <div className=\"container\">\r\n            <h1 className=\"\">React todo-app</h1>\r\n            <p className=\"\">\r\n                Версия приложения <strong>1.0.0</strong>\r\n            </p>\r\n        </div>\r\n    </div>\r\n)","import { createContext } from 'react'\r\n\r\nexport const FirebaseContext = createContext()","import React, {useState, useContext} from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\nimport { FirebaseContext } from '../context/firebase/firebaseContext'\r\n\r\nexport const Form = () => {\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const firebase = useContext(FirebaseContext)\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n\r\n        if (value.trim()) {\r\n            firebase.addNote(value.trim()).then(() => {\r\n                alert.show('Заметка была создана!', 'success')\r\n            }).catch(() => {\r\n                alert.show('Что-то пошло не так...', 'danger')\r\n            })\r\n            setValue('')\r\n        } else {\r\n            alert.show('Введите название заметки!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Введите название заметки\"\r\n                    value={value}\r\n                    onChange={e => setValue(e.target.value) }\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\nexport const Notes = ({ notes, onRemove }) => (\r\n    <TransitionGroup component=\"ul\" className=\"list-group\">\r\n        {notes.map(note => (\r\n            <CSSTransition\r\n                key={note.id}\r\n                classNames={'note'}\r\n                timeout={800}\r\n            >\r\n                            <li className=\"list-group-item note note\">\r\n                                <div>\r\n                                    <strong>{note.title}</strong>\r\n                                    <small>{note.date}</small>\r\n                                </div>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-danger\"\r\n                                    onClick={() => onRemove(note.id)}\r\n                                >\r\n                                    &times;\r\n                                </button>\r\n                            </li>\r\n                        </CSSTransition>\r\n                    ))}\r\n    </TransitionGroup>\r\n)                ","import React from 'react'\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {Fragment, useContext, useEffect, useReducer} from 'react'\r\nimport { Form } from '../components/Form'\r\nimport { Notes } from '../components/Notes'\r\nimport { FirebaseContext } from '../context/firebase/firebaseContext'\r\nimport { Loader } from '../components/Loader'\r\n\r\nexport const Home = () => {\r\n    const { loading, notes, fetchNotes, removeNote } = useContext(FirebaseContext)\r\n    useEffect(() => {\r\n        fetchNotes()\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <Form />\r\n\r\n            <hr />\r\n            {loading\r\n                ? <Loader />\r\n                : <Notes onRemove={removeNote} notes={notes}/>\r\n\r\n            }\r\n        </Fragment>\r\n    )\r\n}","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const SHOW_LOADER = 'SHOW_LOADER'\r\nexport const ADD_NOTE = 'ADD_NOTE'\r\nexport const FETCH_NOTES = 'FETCH_NOTES'\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE'","import { HIDE_ALERT, SHOW_ALERT } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, { payload }) => ({ ...payload, visible: true }),\r\n    [HIDE_ALERT]: state => ({...state, visible: false}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}","import React, { useReducer } from 'react'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReducer } from './alertReducer'\r\n\r\nexport const AlertState = ({ children }) => {\r\n    \r\n    const [state, dispath] = useReducer(alertReducer, {visible: false})\r\n\r\n    const show = (text, type = 'warning') => {\r\n        dispath({\r\n            type: SHOW_ALERT,\r\n            payload: {text, type}\r\n        })\r\n    }\r\n\r\n    const hide = () => dispath({type: HIDE_ALERT})\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            show, hide,\r\n            alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import { ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SHOW_LOADER]: state => ({ ...state, loading: true }),\r\n    [ADD_NOTE]: (state, { payload }) => ({ ...state, notes: [...state.notes, payload] }),\r\n    [FETCH_NOTES]: (state, { payload }) => ({ ...state, notes: payload, loading: false }),\r\n    [REMOVE_NOTE]: (state, {payload}) => ({...state, notes: state.notes.filter(note => note.id !== payload)}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}","import React, {useReducer} from 'react'\r\nimport { FirebaseContext } from './firebaseContext'\r\nimport { firebaseReducer } from './firebaseReducer'\r\nimport axios from 'axios'\r\nimport { ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER } from '../types'\r\n\r\nconst url = process.env.REACT_APP_DB_URL\r\n\r\nexport const FirebaseState = ({ children }) => {\r\n    \r\n    const initialState = {\r\n        notes: [],\r\n        loading: false\r\n    }\r\n\r\n    const [state, dispath] = useReducer(firebaseReducer, initialState)\r\n\r\n    const showLoader = () => dispath({ type: SHOW_LOADER })\r\n    \r\n    const fetchNotes = async () => {\r\n        showLoader()\r\n        const res = await axios.get(`${url}/notes.json`)\r\n\r\n        const payload = Object.keys(res.data).map(key => {\r\n            return {\r\n                ...res.data[key],\r\n                id: key\r\n            }\r\n        })\r\n        dispath({type: FETCH_NOTES, payload})\r\n    }\r\n\r\n    const addNote = async title => {\r\n        const note = {\r\n            title, date: new Date().toJSON()\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post(`${url}/notes.json`, note)\r\n            const payload = {\r\n                ...note,\r\n                id: res.data.name\r\n            }\r\n            dispath({type: ADD_NOTE, payload})\r\n        } catch (e) {\r\n            throw new Error(e.message)\r\n        }\r\n\r\n    }\r\n\r\n    const removeNote = async id => {\r\n        await axios.delete(`${url}/notes/${id}.json`)\r\n        dispath({\r\n            type: REMOVE_NOTE,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <FirebaseContext.Provider value={{\r\n            showLoader, addNote, removeNote, fetchNotes,\r\n            loading: state.loading,\r\n            notes: state.notes\r\n        }}>\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}","import React from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport { Alert } from './components/Alert';\nimport { Navbar } from './components/Navbar';\nimport { About } from './pages/About';\nimport { Home } from './pages/Home';\nimport { AlertState } from './context/alert/AlertState'\nimport { FirebaseState } from './context/firebase/FirebaseState'\n\nfunction App() {\n  return (\n    <FirebaseState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert />\n            <Switch>\n              <Route path={'/'} exact component={ Home }/>\n              <Route path={'/about'} component={ About }/>\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </FirebaseState>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}